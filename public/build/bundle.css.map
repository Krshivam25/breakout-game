{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "App.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { onMount } from \"svelte\";\r\n\r\n  let game = {\r\n    level: 1,\r\n    lives: 3,\r\n    score: 0,\r\n    speed: 20,\r\n    active: false,\r\n    gameOver: false,\r\n  };\r\n\r\n  let ball = {\r\n    x: 490,\r\n    y: 32,\r\n    width: 20,\r\n    height: 20,\r\n  };\r\n\r\n  let paddle = {\r\n    x: 400,\r\n  };\r\n\r\n  const movePaddle = (e) => {\r\n    if (e.layerX >= 100 && e.layerX <= 900) {\r\n      paddle.x = e.layerX - 100;\r\n    }\r\n\r\n    if (!game.active) {\r\n      ball.x = paddle.x + 90;\r\n    }\r\n  };\r\n\r\n  const reset = () => {\r\n    game.active = !game.active;\r\n    ball.x = paddle.x + 90;\r\n    ball.y = 32;\r\n  };\r\n\r\n  const isCollide = (a, b) => {\r\n    return !(\r\n      a.y + a.height < b.y ||\r\n      a.y > b.y + b.height ||\r\n      a.x + a.width < b.x ||\r\n      a.x > b.x + b.width\r\n    );\r\n  };\r\n\r\n  const bounceAngle = (a, b, c) => {\r\n    const l = b - a + 1;\r\n    const p = (c * 100) / l;\r\n    return p <= 20 ? -3 : p <= 40 ? -2 : p <= 60 ? 1 : p <= 80 ? 2 : 3;\r\n  };\r\n\r\n  const flashBricks = () => {\r\n    console.log(bricksArray);\r\n    let all = document.getElementsByClassName(\"brick\");\r\n    bricksArray.forEach((el, index) => {\r\n      if (!el.destroyed) {\r\n        let times = 0;\r\n        all[index].style.backgroundColor = \"tomato\";\r\n        let interval = setInterval(() => {\r\n          if (times % 2 === 0) {\r\n            all[index].style.backgroundColor = \"rgb(60, 238, 43)\";\r\n          } else {\r\n            all[index].style.backgroundColor = \"tomato\";\r\n          }\r\n          ++times;\r\n          if (times === 5) {\r\n            clearInterval(interval);\r\n          }\r\n        }, 100);\r\n      }\r\n    });\r\n  };\r\n\r\n  const gameOver = (bX, bY, pX, interval) => {\r\n    if (bY < -20 && (bX < pX || bX > pX + 200)) {\r\n      if (game.lives > 0) {\r\n        --game.lives;\r\n        clearInterval(interval);\r\n        setTimeout(() => {\r\n          flashBricks();\r\n          reset();\r\n        }, 0);\r\n      } else {\r\n        clearInterval(interval);\r\n        game.gameOver = true;\r\n      }\r\n    }\r\n  };\r\n\r\n  const playAgain = () => {\r\n    game.gameOver = false;\r\n    game.level = 1;\r\n    game.lives = 3;\r\n    game.score = 0;\r\n    game.speed = 20;\r\n    setTimeout(() => {\r\n      reset();\r\n      nextLevel();\r\n    }, 0);\r\n  };\r\n\r\n  let nextLevel = () => {\r\n    bricksArray = [];\r\n    let all = document.getElementsByClassName(\"brick\");\r\n    setTimeout(() => {\r\n      [...all].forEach((el, index) => {\r\n        all[index].style.backgroundColor = \"rgb(60, 238, 43)\";\r\n        bricksArray.push({\r\n          x: el.offsetLeft,\r\n          y: 580 - el.offsetTop,\r\n          height: el.clientHeight,\r\n          width: el.clientWidth,\r\n          destroyed: false,\r\n        });\r\n      });\r\n    }, 0);\r\n  };\r\n\r\n  let bricksArray = [];\r\n  onMount(() => {\r\n    let all = document.getElementsByClassName(\"brick\");\r\n    [...all].forEach((el) => {\r\n      bricksArray.push({\r\n        x: el.offsetLeft,\r\n        y: 580 - el.offsetTop,\r\n        height: el.clientHeight,\r\n        width: el.clientWidth,\r\n        destroyed: false,\r\n      });\r\n    });\r\n  });\r\n\r\n  const initGame = () => {\r\n    game.active = !game.active;\r\n    if (game.active) {\r\n      let up = 8;\r\n      let right = 1;\r\n\r\n      const init = setInterval(() => {\r\n        let leftBricks = 0;\r\n        bricksArray.forEach((el, index) => {\r\n          if (isCollide(ball, el) && !el.destroyed) {\r\n            const all = document.getElementsByClassName(\"brick\");\r\n            all[index].style.backgroundColor = \"transparent\";\r\n            el.destroyed = true;\r\n            ++game.score;\r\n            up = -up;\r\n          }\r\n          if (!el.destroyed) {\r\n            ++leftBricks;\r\n          }\r\n          if (leftBricks === 0 && index + 1 === bricksArray.length) {\r\n            ++game.level;\r\n            if (game.speed) {\r\n              --game.speed;\r\n            }\r\n            setTimeout(() => {\r\n              clearInterval(init);\r\n              reset();\r\n              nextLevel();\r\n            }, 0);\r\n          }\r\n        });\r\n\r\n        // bounce against the ceilings and floor\r\n        if (ball.y > 530 || ball.y < -50) {\r\n          up = -up;\r\n        }\r\n\r\n        // bounce against paddle\r\n        if (ball.y < 30 && ball.x + 20 > paddle.x && ball.x < paddle.x + 200) {\r\n          let res = bounceAngle(\r\n            paddle.x,\r\n            paddle.x + 200,\r\n            ball.x + 10 - paddle.x\r\n          );\r\n          if (res === 1) {\r\n            up = -up;\r\n            right = right / Math.abs(right);\r\n          } else {\r\n            up = -up;\r\n            right = 1 * res;\r\n          }\r\n        }\r\n\r\n        // bounce against side walls\r\n        if (ball.x > 980 || ball.x < 0) {\r\n          right = -right;\r\n        }\r\n\r\n        ball.y += up;\r\n        ball.x += right;\r\n\r\n        gameOver(ball.x, ball.y, paddle.x, init);\r\n      }, game.speed);\r\n    }\r\n  };\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    width: 1000px;\r\n    height: 600px;\r\n    margin: 100px auto 0 auto;\r\n    position: relative;\r\n    overflow: hidden;\r\n  }\r\n\r\n  .info-panel {\r\n    display: flex;\r\n    text-align: right;\r\n    height: 30px;\r\n    color: white;\r\n    padding: 10px;\r\n    gap: 32px;\r\n    font-size: 20px;\r\n    justify-content: flex-end;\r\n    vertical-align: middle;\r\n    align-items: center;\r\n    font-weight: bold;\r\n  }\r\n  #brick-panel {\r\n    padding: 80px;\r\n    display: grid;\r\n    gap: 5px;\r\n  }\r\n  .brick {\r\n    height: 20px;\r\n    background-color: rgb(60, 238, 43);\r\n    border-radius: 10px;\r\n  }\r\n  #ball {\r\n    width: 20px;\r\n    height: 20px;\r\n    border-radius: 50%;\r\n    background-color: rgb(255, 96, 75);\r\n    position: absolute;\r\n  }\r\n  #paddle {\r\n    width: 200px;\r\n    height: 20px;\r\n    background-color: rgb(255, 255, 255);\r\n    position: absolute;\r\n    bottom: 10px;\r\n    border-radius: 10px;\r\n  }\r\n\r\n  h1 {\r\n    color: white;\r\n    font-size: 60px;\r\n    text-align: center;\r\n  }\r\n</style>\r\n\r\n{#if !game.gameOver}\r\n  <main on:mousemove={movePaddle} on:click={initGame}>\r\n    <div class=\"info-panel\">\r\n      <p>Level: {game.level}</p>\r\n      <p>Lives: {game.lives}</p>\r\n      <p>Score: {game.score}</p>\r\n    </div>\r\n    <div\r\n      id=\"brick-panel\"\r\n      style=\"grid-template-columns: repeat({game.level + 2}, 1fr);\">\r\n      {#each Array((game.level + 2) * 6) as _, i}\r\n        <div class=\"brick\" />\r\n      {/each}\r\n    </div>\r\n\r\n    <div id=\"ball\" style=\"left:{ball.x}px; bottom:{ball.y}px\" />\r\n    <div id=\"paddle\" style=\"left:{paddle.x}px\" />\r\n  </main>\r\n{:else}\r\n  <main>\r\n    <h1>Game Over</h1>\r\n    <h1>Level: {game.level}, Points: {game.score}</h1>\r\n    <button on:click={playAgain}>Play again!</button>\r\n  </main>\r\n{/if}\r\n"
  ],
  "names": [],
  "mappings": "AA2ME,IAAI,cAAC,CAAC,AACJ,KAAK,CAAE,MAAM,CACb,MAAM,CAAE,KAAK,CACb,MAAM,CAAE,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CACzB,QAAQ,CAAE,QAAQ,CAClB,QAAQ,CAAE,MAAM,AAClB,CAAC,AAED,WAAW,cAAC,CAAC,AACX,OAAO,CAAE,IAAI,CACb,UAAU,CAAE,KAAK,CACjB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,IAAI,CACT,SAAS,CAAE,IAAI,CACf,eAAe,CAAE,QAAQ,CACzB,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,MAAM,CACnB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,YAAY,cAAC,CAAC,AACZ,OAAO,CAAE,IAAI,CACb,OAAO,CAAE,IAAI,CACb,GAAG,CAAE,GAAG,AACV,CAAC,AACD,MAAM,cAAC,CAAC,AACN,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAClC,aAAa,CAAE,IAAI,AACrB,CAAC,AACD,KAAK,cAAC,CAAC,AACL,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,GAAG,CAClB,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAClC,QAAQ,CAAE,QAAQ,AACpB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,KAAK,CAAE,KAAK,CACZ,MAAM,CAAE,IAAI,CACZ,gBAAgB,CAAE,IAAI,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CACpC,QAAQ,CAAE,QAAQ,CAClB,MAAM,CAAE,IAAI,CACZ,aAAa,CAAE,IAAI,AACrB,CAAC,AAED,EAAE,cAAC,CAAC,AACF,KAAK,CAAE,KAAK,CACZ,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,AACpB,CAAC"
}